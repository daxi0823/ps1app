@charset "UTF-8";

/*=========================
  base
=========================*/
html {
  scroll-behavior: smooth;
  font-size: 62.5%;/* 1rem = 10px */
}

/* 擬似クラス
a:hover {}

擬似要素 コロンの数で分ける
スタイリングに使うケースが多い
div::after {} */

/* スマホ大 or 横向き〜 */
@media (min-width: 576px) {
}
/* タブレット〜 */
@media (min-width: 768px) {
  html {
    font-size: 87.5%;/* 1rem = 14px */
  }
}
/* PC〜 */
@media (min-width: 992px) {
}
/* PC大〜 */
@media (min-width: 1200px) {
}

/*=========================
  Layout
=========================*/
.container {
  width: 100%;
  margin: 0 auto;
}
/*スマホ大、横向き〜 */
@media (min-width: 576px) {
  .container {
    max-width: 540px;
  }
}
/*　タブレット 〜 */
@media (min-width: 768px) {
  .container {
    max-width: 720px;
  }
}
/*　PC 〜 */
@media (min-width: 992px) {
  .container {
    max-width: 960px;
  }
}
/*　PC大 〜 */
@media (min-width: 1200px) {
  .container {
    max-width: 1140px;
  }
}

/*=========================
  common style
=========================*/
* {
  font-size: 1.4rem;
}
a {
  color: #3a1301;
  text-decoration: none;
}
img {
  max-width: 100%;
  height: auto;
  vertical-align: top;
}
ul {
  list-style: none;
}
.ttl {
  font-size: 3.2rem;
  text-align: center;
  padding-top: 4em;
  margin-bottom: 2em;
}
/*=========================
  Header
=========================*/
header {
  width: 100%;
  /* position: fixed; */
  position: sticky;
  top: 0;
  left: 0;
  background: rgba(253, 249, 243, 0.7);
}
header .container {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 15px 0;
}
.logo {
  width: 220px;
}
#gnav ul {
  display: flex;
  gap: 30px;
}

/*=========================
  Footer
=========================*/
footer {
  background-color: #e09574;
  padding: 60px 0;
  color: #FFF;
}
footer .container {
  display: flex;
  flex-direction: column;
  align-items: center;
}
.footer__sns {
  display: flex;
  align-items: flex-end;
  gap: 40px;
}
.footer__sns li {
  width: 60px;
  height: 60px;
  padding: 15px;
  background-color: #EEE;
  border-radius: 50%;
}
.footer__sns svg {
  width: 100%;
  height: auto;
  fill: #666;
}
.footer_address {
  margin-bottom: 40px;
}

@media (min-width: 576px) {
}
@media (min-width: 768px) {
  footer .container {
    flex-direction: row;
    justify-content: space-between;
  }
}


/*=========================
  main contents
=========================*/
main {
  padding-bottom: 400px;
  background-color: rgb(253, 249, 243);
}
#mv {
  position: relative;
  /* height: 100vh; */
  height: calc(100vh - 86px);
  background: url(./images/menu10.jpg) no-repeat;
  background-size: cover;
  background-position: center;
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  /* margin-bottom: 60px; */
}
#mv::after {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  /* 擬似要素に何か入れるには、必ずcontent */
  /*  */
  content: "";
  display: block;
  /* linear-gradient グラデーション */
  background: linear-gradient(#c9ffbf, #ffafbd);
  mix-blend-mode: color;
}
.mv__ttl {
  width: 100%;
  /* font-size: 54px; */
  /* font-size: 11.03vw; */
  font-size: min(10.03vw, 64px);
  font-family: 'Philosopher', sans-serif;
  margin-bottom: 10px;
}
.mv__txt {
  font-size: 18px;
}
.copy__wrapper {
  background-color: rgba(255, 255, 255, 0.4);
  padding: 120px 40px;
  border-radius: 46% 34% 68% 52%;
  /* border-radius: 9999999px; */
}
.main__img {
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  gap: 30px;
}
.main__img li {
  border: solid 1px #CCC;
  border-radius: 20px;
  overflow: hidden;
}
.main__img li:hover {
  opacity: 0.8;
}
.main__img img {
  width: 100%;
}
.menu__inner {
  padding: 20px;
}
@media (min-width: 576px) {
}
@media (min-width: 768px) {
  .main__img {
    flex-direction: row;
  }
  .main__img li {
    /* width: 50%; */
    width: calc((100% - 30px) / 2);
  }
}
@media (min-width: 992px) {
  .main__img li {
    /* width: 33.3%; */
    width: calc((100% - 60px) / 3);
  }
}

/*=========================
  desc
=========================*/
.desc__left img {
  width: 100%;
}
.desc__right p {
  padding: 10px 0 40px;
  font-size: 1.4rem;
}
@media (min-width: 576px) {
}
@media (min-width: 768px) {
  .desc__wrapper {
    display: flex;
    margin-bottom: 60px;
  }
  .desc__wrapper_reverse {
    flex-direction: row-reverse;
  }
  .desc__left {
    width: 40%;
  }
  .desc__right {
    width: 60%;
    padding: 2em;
  }
}

/*=========================
  accordion
=========================*/
#accordion {}

.tab_label {
  display: block;
  cursor: pointer;
  background-color: #CCC;
  padding: 10px 0.5em;
  border: solid 1px rgba(0, 0, 0, 0.2);
  color: #FFF;
}
.tab_label::before {
  content: '▼';
  margin-right: 0.2em;
  display: inline-block;
  transform: rotate(-90deg);
}
.trigger:checked+.tab_label::before {
  transform: rotate(0);
}
.trigger:checked+.tab_label, .tab_label:hover {
  background-color: deepskyblue;
}
.contents {
  height: 0;
  overflow: hidden;
  opacity: 0;
}
.trigger:checked+.tab_label+.contents {
  height: auto;
  overflow: auto;
  opacity: 1;
  padding: 30px;
  border: solid 1px rgba(0, 0, 0, 0.2);
  transition: all 1.2s ease;
}

.trigger {
  display: none;
}
/*=========================
  Table
=========================*/
.tbl__wrapper {
  width: 100%;
  overflow: auto;
  border-top: solid 1px #CCC;
  border-right: solid 1px #CCC;
  border-left: solid 1px #CCC;
}
.tbl__01 {
  /* width: 100%; */
  width: 1400px;
  /* table-layout: fixed; */
  /* border-collapse: collapse; */
  border-collapse: separate;
  border-spacing:0;
}
.tbl__01 th,
.tbl__01 td {
  border-right: solid 1px #CCC;
  border-bottom: solid 1px #CCC;
  padding: 15px;
  vertical-align: top;
}
.tbl__01 th {
  position: sticky;
  left: 0;
  background-color: rgb(225, 235, 250);
}
.tbl__01 td:last-child {
  border-right: none;
}
/* @media (max-width: 767px) {
  .tbl__01,
  .tbl__01 tbody,
  .tbl__01 tr,
  .tbl__01 th,
  .tbl__01 td {
    display: block;
    width: 100%;
  }
} */

/*=========================
  Position
=========================*/
#posi {
  background-color: #feffdb;
}

.posi__box__wrapper {
  /* 子要素にposition:absoluteを設定する場合
  高さを入れておかないと、ハコが潰れてしまう */
  /* height: 500px; */
  display: flex;
  /* positionを当てたい要素の、「基準点」に設定する */
  /* position: relative;自体には意味はない
  本来ある位置の、、、（影響を与えずに基準点を作りたい） */
  position: relative;
  /* border: dotted 2px #333; */

}
.posi__box__wrapper__02 {
  z-index: 100;
}


.posi__box {
  /* negative margin → 重なりをつける */
  /* margin: 0 -20px; */
  
  /* position: relative;を設定しても、
  ハコ(一般には親要素)のサイズは変わらない
  
  レイヤーの順番を変えるためだけに使う場合も多い*/
  /* position: relative; */


  /* position: absolute;の場合は、
  ハコ(一般には親要素)のサイズは変わらない */
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 300px;
  height: 260px;
  color: #FFF;
  font-size: 2.4rem;
  font-weight: bold;
  /* display: flex;を入れると、text-alignは聞かない */
  /* text-align: center; */
  /* border-radius: 50% 40% 30% 20%; */

  /* cssで各種設定をしていて、JSで数値を変更できる
  →ウニャウニャ動かすこともできる！ */

    /* opacity: 0.8; */
    /* mix-blend-mode: multiply; */
}
.posi__box__01 {
  top: -40px;
  right: -100px;
  z-index: 10;
  /* z-indexがプラスの方が、画面上に出てくる */
  background-color: #f66;
  border-radius: 50% 50% 50% 70%/ 50% 50% 70% 60%;
}
.posi__box__02 {
  top: -100px;
  /* z-index: 12; */
  background-color: #f92;
  border-radius: 50% 50% 50% 70%/ 50%;
}
.posi__box__03 {
  bottom: -40px;
  right: 100px;
  background-color: #fc2;
  border-radius: 50% 50% 50% 70%/ 50% 50% 70% 60%;
}

.posi__box__04 {
  top: -40px;
  right: -100px;
  z-index: 10;
  background-color: rgb(255, 49, 49);
  border-radius: 50% 50% 50% 70%/ 50% 50% 70% 60%;
}
.posi__box__05 {
  top: -100px;
  /* z-index: 12; */
  background-color: rgb(226, 124, 7);
  border-radius: 50% 50% 50% 70%/ 50%;
}
.posi__box__06 {
  bottom: -40px;
  right: 100px;
  background-color: rgb(223, 173, 10);
  border-radius: 50% 50% 50% 70%/ 50% 50% 70% 60%;
}





