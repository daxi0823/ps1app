{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      // vueは最後もカンマつけて良い\n      message: 'こんにちは！',\n      // canBuy: false,\n      items: [{\n        name: '鉛筆',\n        price: '300',\n        quantity: 0\n      }, {\n        name: 'ノート',\n        price: '400',\n        quantity: 0\n      }, {\n        name: '消しゴム',\n        price: '500',\n        quantity: 0\n      }]\n    };\n  },\n  filters: {\n    numberWithDelimiter: function numberWithDelimiter(value) {\n      if (!value) {\n        return '0';\n      }\n\n      return value.toString().replace(/(\\d)(?=(\\d{3})+$)/g, '$1,');\n    }\n  },\n  methods: {\n    doBuy: function doBuy() {\n      alert(this.totalPriceWithTax + '円のお買い上げ！');\n      this.items.forEach(function (item) {\n        item.quantity = 0;\n      });\n    }\n  },\n  computed: {\n    totalPrice: function totalPrice() {\n      return this.items.reduce(function (sum, item) {\n        return sum + item.price * item.quantity;\n      }, 0);\n    },\n    totalPriceWithTax: function totalPriceWithTax() {\n      return Math.floor(this.totalPrice * 1.08);\n    },\n    canBuy: function canBuy() {\n      return this.totalPrice >= 1000;\n    },\n    errorMessageClass: function errorMessageClass() {\n      return {\n        error: !this.canBuy\n      };\n    }\n  },\n  // watch dataの変更を追いかける\n  watch: {// items: {\n    //   handler: function() {\n    //     alert('!!')\n    //   },\n    //   deep: true\n    // }\n  },\n  mounted: function mounted() {// 読み込まれた時に実行、とか\n  },\n  created: function created() {}\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AACAA,MADA,kBACA;AACA;AACA;AACAC,uBAFA;AAGA;AACAC,cACA;AACAC,kBADA;AAEAC,oBAFA;AAGAC;AAHA,OADA,EAMA;AACAF,mBADA;AAEAC,oBAFA;AAGAC;AAHA,OANA,EAWA;AACAF,oBADA;AAEAC,oBAFA;AAGAC;AAHA,OAXA;AAJA;AAsBA,GAxBA;AAyBAC;AACAC;AACA;AACA;AACA;;AACA;AACA;AANA,GAzBA;AAiCAC;AACAC;AACAC;AACA;AACAC;AACA,OAFA;AAGA;AANA,GAjCA;AAyCAC;AACAC;AACA;AACA;AACA,OAFA,EAEA,CAFA;AAGA,KALA;AAMAC;AACA;AACA,KARA;AASAC;AACA;AACA,KAXA;AAYAC;AACA;AACAC;AADA;AAGA;AAhBA,GAzCA;AA2DA;AACAC,UACA;AACA;AACA;AACA;AACA;AACA;AANA,GA5DA;AAoEAC,SApEA,qBAoEA,CACA;AACA,GAtEA;AAuEAC,SAvEA,qBAuEA,CAEA;AAzEA","names":["data","message","items","name","price","quantity","filters","numberWithDelimiter","methods","doBuy","alert","item","computed","totalPrice","totalPriceWithTax","canBuy","errorMessageClass","error","watch","mounted","created"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n\n    <ul>\n      <li v-for=\"item in items\" :key=\"item.name\">\n        {{ item.name }}の個数：\n        <input type=\"number\" v-model=\"item.quantity\" min=\"0\">\n\n        <!-- v-on $evnent.target.valueで自身のvalueを、item.quantityに入れる-->\n        <!-- v-bind :value=\"item.quantity\" に入れる-->\n        <!-- <input type=\"number\"\n        v-on:input=\"item.quantity = $evnent.target.value\"\n        v-bind:value=\"item.quantity\"\n        min=\"0\"> -->\n        <!-- $evenetの中の、targetの中の、valueを取得（場所がわかっており、イベントが起こるごとに取得している -->\n      </li>\n    </ul>\n    <!-- 各商品の単価と購入個数をリスト表示する -->\n    <ul>\n      <li v-for=\"item in items\" v-bind:key=\"item.name\">\n        {{ item.name }}： {{ item.price }} ✖️ {{ item.quantity }} = {{ item.price * item.quantity | numberWithDelimiter }}円\n      </li>\n    </ul>\n\n    <!-- <p>\n      {{ items[0].name }}: {{ items[0].price }} ✖️ {{ items[0].quantity }}\n    </p> -->\n\n    <p><button v-bind:disabled=\"!canBuy\" @click=\"doBuy\">購入</button></p>\n    <!-- <p>フィルタ処理例 {{ 1000000 | numberWithDelimiter }} </p> -->\n    <p>小計：{{ totalPrice | numberWithDelimiter }}円</p>\n    <p>合計（税込）：{{ totalPriceWithTax | numberWithDelimiter }}円</p>\n    <!-- <p v-show=\"!canBuy\">\n      {{ 1000 | numberWithDeliminer }}円以上からご購入いただけます\n    </p> -->\n    <p v-bind:class=\"errorMessageClass\">\n      {{ 1000 | numberWithDelimiter }}円以上からご購入いただけます\n    </p>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      // vueは最後もカンマつけて良い\n      message: 'こんにちは！',\n      // canBuy: false,\n      items: [\n        {\n          name: '鉛筆',\n          price: '300',\n          quantity: 0,\n        },\n        {\n          name: 'ノート',\n          price: '400',\n          quantity: 0,\n        },\n        {\n          name: '消しゴム',\n          price: '500',\n          quantity: 0,\n        },\n      ]\n    }\n  },\n  filters: {\n    numberWithDelimiter: function(value) {\n      if(!value) {\n        return '0'\n      }\n      return value.toString().replace(/(\\d)(?=(\\d{3})+$)/g, '$1,')\n    }\n  },\n  methods: {\n    doBuy: function() {\n      alert(this.totalPriceWithTax + '円のお買い上げ！')\n      this.items.forEach(function(item) {\n        item.quantity = 0\n      })\n    }\n  },\n  computed: {\n    totalPrice: function() {\n      return this.items.reduce((sum, item) =>  {\n        return sum + (item.price * item.quantity)\n      }, 0)\n    },\n    totalPriceWithTax: function() {\n      return Math.floor(this.totalPrice * 1.08)\n    },\n    canBuy: function() {\n      return this.totalPrice >= 1000\n    },\n    errorMessageClass: function() {\n      return {\n        error: !this.canBuy\n      }\n    },\n  },\n  // watch dataの変更を追いかける\n  watch: {\n    // items: {\n    //   handler: function() {\n    //     alert('!!')\n    //   },\n    //   deep: true\n    // }\n  },\n  mounted() {\n    // 読み込まれた時に実行、とか\n  },\n  created() {\n\n  },\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n.error {\n  color: red\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}